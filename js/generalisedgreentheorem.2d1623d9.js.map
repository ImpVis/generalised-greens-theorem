{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/GeneralisedGreenTheorem/GeneralisedGreenTheorem.vue?c67a","webpack:///src/GeneralisedGreenTheorem/GeneralisedGreenTheorem.vue","webpack:///./src/GeneralisedGreenTheorem/GeneralisedGreenTheorem.vue?249f","webpack:///./src/GeneralisedGreenTheorem/GeneralisedGreenTheorem.vue","webpack:///./src/GeneralisedGreenTheorem/main.js","webpack:///./vue.config.js","webpack:///./src/GeneralisedGreenTheorem/GeneralisedGreenTheorem.vue?b402"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","pageName","vue_config","scopedSlots","_u","fn","_v","staticStyle","staticClass","on","togglePause","_s","buttonMessage","proxy","staticRenderFns","component","Vue","config","productionTip","use","ImpVis","ImpVisKatex","h","generalisedgreentheorem","$mount","publicPath","pages","index","entry","title","introduction","divergence","curl","circulation","greentheorem","stoketheorem"],"mappings":"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","file":"js/generalisedgreentheorem.2d1623d9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"generalisedgreentheorem\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"generalisedgreentheorem\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c4639\":\"4790a3d3\",\"chunk-76e94462\":\"30e7b526\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-76e94462\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c4639\":\"31d6cfe0\",\"chunk-76e94462\":\"0616178c\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([7,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('iv-visualisation',{attrs:{\"title\":_vm.pageName,\"vue_config\":_vm.vue_config,\"page_number\":6},scopedSlots:_vm._u([{key:\"hotspots\",fn:function(){return [_c('iv-pane',{attrs:{\"position\":\"left\",\"format\":\"full\"}},[_c('iv-sidebar-content',{attrs:{\"showPagination\":true}},[_c('iv-sidebar-section',{attrs:{\"title\":\"Generalised Green's Theorem\",\"icon\":\"book-open\"}},[_vm._v(\" Similarly, any arbitrary shape can be cut in to small pieces, with microscopic circulation existing on each of them. \"),_c('br'),_c('br'),_vm._v(\" From the animation on the right hand side, every arrow inside the grid will cancel with an arrow with opposite direction. In other words, all the \"),_c('span',{staticStyle:{\"color\":\"#FF00FF\"}},[_c('b',[_vm._v(\"magenta\")])]),_vm._v(\" arrows will cancel each other and we are left with \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_c('b',[_vm._v(\"black\")])]),_vm._v(\" arrows.\"),_c('br'),_c('br'),_vm._v(\" This again demonstrates the relationship between the microscopic circulation and the macroscopic circulation. Therefore Green's theorem can be apply on any positively oriented, piecewise smooth, simple closed arbitrary curves. \")]),_c('iv-sidebar-section',{attrs:{\"title\":\"Instructions\",\"theme\":\"Lime\"}},[_vm._v(\" The graph shows a 2D arbitrary surface bounded by an anticlockwise oriented loop. \"),_c('br'),_c('br'),_vm._v(\" By clicking on the \\\"Play\\\" button, the surface will be sliced into several smaller pieces, each bounded by an anticlockwise oriented loop. The inner arrows will cancel with each other. And hence the sole effect of piling up the microscopic circulations will be the macroscopic circulation. \")])],1)],1),_c('iv-fixed-hotspot',{attrs:{\"position\":\"bottom\",\"transparent\":\"\"}},[_c('div',{staticClass:\"center\",staticStyle:{\"padding-bottom\":\"50px\"}},[_c('iv-button',{attrs:{\"id\":\"playButton\"},on:{\"click\":_vm.togglePause}},[_vm._v(_vm._s(_vm.buttonMessage))])],1)])]},proxy:true}])},[_c('div',{staticClass:\"center\"},[_c('div',{staticStyle:{\"width\":\"450px\",\"height\":\"450px\"},attrs:{\"id\":\"graph\"}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <iv-visualisation :title=\"pageName\" :vue_config=\"vue_config\" :page_number=\"6\">\r\n            <template #hotspots>\r\n                <iv-pane position=\"left\" format=\"full\">\r\n                    <iv-sidebar-content :showPagination=\"true\">\r\n                        <iv-sidebar-section title=\"Generalised Green's Theorem\" icon=\"book-open\">\r\n                            Similarly, any arbitrary shape can be cut in to small pieces, with microscopic circulation existing on each of them. <br><br>\r\n\r\n                            From the animation on the right hand side, every arrow inside the grid will cancel with an arrow with opposite\r\n                            direction. In other words, all the <span style=\"color:#FF00FF\"><b>magenta</b></span> arrows will\r\n                            cancel each other and we are left with <span style=\"color:#000000\"><b>black</b></span> arrows.<br><br>\r\n\r\n                            This again demonstrates the relationship between the microscopic circulation and the macroscopic circulation. Therefore Green's theorem can\r\n                            be apply on any positively oriented, piecewise smooth, simple closed arbitrary curves.              \r\n                        </iv-sidebar-section>\r\n\r\n                        <iv-sidebar-section title=\"Instructions\" theme=\"Lime\">\r\n                            The graph shows a 2D arbitrary surface bounded by an anticlockwise oriented loop. <br><br>\r\n\r\n                            By clicking on the \"Play\" button, the surface will be sliced into several smaller pieces, each bounded by an anticlockwise oriented loop. The inner arrows will cancel with each other. And hence the sole effect of piling up the microscopic circulations will be the macroscopic circulation.\r\n                        </iv-sidebar-section>\r\n                    </iv-sidebar-content>\r\n                </iv-pane>\r\n\r\n                <iv-fixed-hotspot position=\"bottom\" transparent>\r\n                    <div class=\"center\" style=\"padding-bottom: 50px;\">\r\n                        <iv-button id=\"playButton\" @click=\"togglePause\">{{ buttonMessage }}</iv-button>\r\n                    </div>\r\n                </iv-fixed-hotspot>\r\n            </template>\r\n\r\n            <div class=\"center\">\r\n                <div id=\"graph\" style=\"width:450px; height:450px;\" />\r\n            </div>\r\n        </iv-visualisation>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vue_config from '../../vue.config.js'\r\nimport Plotly from 'plotly.js-dist'\r\nimport $ from 'jquery';\r\nimport * as math from 'mathjs';\r\nimport numeric from 'numeric';\r\n\r\nexport default {\r\n    name:\"generalisedgreentheorem\",\r\n    data(){\r\n        return {\r\n            pageName:\"Generalised Green's Theorem\",\r\n            vue_config,\r\n            isPaused: true,\r\n            redrawPlot: false,\r\n            frameNo: 0,\r\n        };\r\n    },\r\n    methods: {\r\n        togglePause() {\r\n            if (this.frameNo != 9) {\r\n                this.isPaused = !this.isPaused;\r\n            }\r\n            \r\n            \r\n            if (!this.isPaused) {\r\n                this.timer = setInterval(() => {\r\n                    if (this.frameNo < 9) {\r\n                        this.frameNo += 1;\r\n                    } else {\r\n                        clearInterval(this.timer);\r\n                        this.isPaused = true;\r\n                    }\r\n                }, 100)\r\n            } else {\r\n                clearInterval(this.timer);\r\n                if (this.frameNo == 9) {\r\n                    this.frameNo = 0;\r\n                    this.redrawPlot = true;\r\n                    console.log(\"reset\")\r\n                }\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        buttonMessage() {\r\n            console.log(this.frameNo);\r\n            if (this.isPaused) {\r\n                if (this.frameNo < 9) {\r\n                    return \"Play\";\r\n                } else {\r\n                    return \"Reset\";\r\n                }\r\n            } \r\n\r\n            return \"Pause\";\r\n        },\r\n    },\r\n    watch: {\r\n        frameNo: function() {\r\n            this.redrawPlot = true;\r\n        }\r\n    },\r\n    mounted() {\r\n        let v = this;\r\n        // Colour definitions:\r\n        let magenta = \"#FF00FF\",\r\n            // blue = \"#0000FF\",\r\n            // green = \"#008000\",\r\n            // impBlue = \"#003E74\",\r\n            black = \"rgb(0,0,0)\",\r\n            // white = \"rgb(255,255,255)\",\r\n            // cyan = \"rgb(0,146,146)\", //1\r\n            // lilac = \"rgb(182,109,255)\", //2\r\n            orange = \"rgb(219,209,0)\"; //3\r\n            // orange2 = \"rgb(240,150,0)\"; //3\r\n\r\n        // Plot Utilities:\r\n        /**\r\n        * changes polar to cartesian coordinates\r\n        * @param {float} rho - rho.\r\n        * @param {float} phi - phi.\r\n        */\r\n        function p2c(rho, phi) {\r\n            return [\r\n                rho * Math.cos(phi),\r\n                rho * Math.sin(phi)\r\n            ];\r\n        }\r\n        /**\r\n        * changes cartesian to polar coordinates\r\n        * @param {float} x - x.\r\n        * @param {float} y - y.\r\n        */\r\n        function c2p(x,y) {\r\n            let rho = 0, phi = 0;\r\n            if (x*x + y*y !== 0) {\r\n                rho = Math.sqrt(x*x + y*y);\r\n                phi = Math.atan2(y,x);\r\n            }\r\n            return [rho, phi];\r\n        }\r\n\r\n        /**\r\n        * Represents a line.\r\n        * @constructor\r\n        * @param {list} points - list of the points in the line.\r\n        */\r\n        function Line2d(points) {\r\n            this.x = [];\r\n            this.y = [];\r\n\r\n            for (let i = 0; i  < points.length; ++i) {\r\n                this.x.push(points[i][0]);\r\n                this.y.push(points[i][1]);\r\n            }\r\n\r\n            this.gObject = function(color, width=7, dash=\"solid\") {\r\n                let lineObject = {\r\n                    type: \"scatter\",\r\n                    mode: \"lines\",\r\n                    x: this.x,\r\n                    y: this.y,\r\n                    line: {color: color, width: width, dash:dash}\r\n                }\r\n                return lineObject;\r\n            }\r\n\r\n            this.arrowHead = function(color, width=7, dash=\"solid\") {\r\n                let lastElm = this.x.length - 1;\r\n                let [rho, phi] = c2p(this.x[lastElm] - this.x[0], this.y[lastElm] - this.y[0]);\r\n                let offset = [this.x[0], this.y[0]];\r\n                let frac = 0.2*rho;\r\n                let sin45 = Math.sin(Math.PI/4);\r\n                let d = rho - frac * sin45;\r\n                let wingLength = Math.sqrt(Math.pow(frac*sin45,2) + d*d);\r\n                let wingAngle = Math.acos(d/wingLength);\r\n\r\n                let wings_xyz = [\r\n                    math.add(p2c(wingLength, phi + wingAngle), offset),\r\n                    math.add(p2c(wingLength, phi - wingAngle), offset)\r\n                ];\r\n\r\n                let wings = {\r\n                    type: \"scatter\",\r\n                    mode: \"lines\",\r\n                    x: [wings_xyz[0][0], this.x[lastElm], wings_xyz[1][0]],\r\n                    y: [wings_xyz[0][1], this.y[lastElm], wings_xyz[1][1]],\r\n                    line: {color: color, width: width, dash: dash}\r\n                }\r\n\r\n                return wings;\r\n            }\r\n        }\r\n\r\n        // Global variables:\r\n        let animationFrames;\r\n        let animationIndex, animationLimit;\r\n        let duration = 50;\r\n        let isPaused = v.isPaused;\r\n        let stops;\r\n        let playID, sliderID;\r\n\r\n        /**\r\n         * initialises the animation frames.\r\n         * @param {string} playButtonID - Play button ID.\r\n         * @param {object} allFrames - The frames needed to animate.\r\n         * @param {list} extra - list of objects with inanimated plots.\r\n         * @param {object} layout - layout for the animation.\r\n         * @param {float} setDuration - frame transition duration (ms).\r\n         * @param {list} stopValues - stopping points (limit: upto 2 stops can be introduced)\r\n         */\r\n        function initAnimation(\r\n            playButtonID,\r\n            allFrames,\r\n            extra = [],\r\n            layoutIn = {},\r\n            setDuration = 50,\r\n            stopValues = [0, 0]\r\n        ) {\r\n            console.log(\"initAnimation called\");\r\n            Plotly.purge(\"graph\");\r\n            playID = playButtonID;\r\n            sliderID = \"#\" + playID.slice() + \"Slider\";\r\n            duration = setDuration;\r\n            animationFrames = allFrames;\r\n            animationLimit = animationFrames.length;\r\n            stops = stopValues;\r\n            isPaused = true;\r\n            animationIndex = 0;\r\n            let dataIn = [];\r\n            for (let i = 0, n = animationFrames[0].data.length; i < n; ++i) {\r\n                dataIn.push({\r\n                    type: animationFrames[0].data.type,\r\n                });\r\n            }\r\n            for (let i = 0, n = extra.length; i < n; ++i) {\r\n                dataIn.push(extra[i]);\r\n            }\r\n            Plotly.newPlot(\"graph\", dataIn, (layout = layoutIn));\r\n            reset();\r\n        }\r\n\r\n        /** resets animation. */\r\n        function reset() {\r\n            console.log(\"reset called\");\r\n            isPaused = true;\r\n            animationIndex = 0;\r\n            historyPlot(animationIndex);\r\n            // document.getElementById(playID).value = isPaused ? \"Play\" : \"Pause\";\r\n            updateSlider();\r\n            return;\r\n        }\r\n\r\n        /**\r\n        * plots index-th frame\r\n        * @param {int} index - index of the frame\r\n        */\r\n        function historyPlot(index) {\r\n            console.log(\"historyPlot called\");\r\n            animationIndex = index;\r\n            let data = [];\r\n            for (let i = 0, n = animationFrames[index].data.length; i < n; ++i) {\r\n                data.push(animationFrames[index].data[i]);\r\n            }\r\n            Plotly.animate(\r\n                \"graph\",\r\n                { data: data },\r\n                {\r\n                    fromcurrent: true,\r\n                    transition: { duration: 0 },\r\n                    frame: { duration: 0, redraw: true },\r\n                }\r\n            );\r\n            isPaused = true;\r\n            // document.getElementById(playID).value = isPaused ? \"Play\" : \"Pause\";\r\n            return;\r\n        }\r\n\r\n        /** Updates animation. */\r\n        function update() {\r\n            animationIndex++;\r\n            if (animationIndex === animationLimit) {\r\n                isPaused = true;\r\n                // document.getElementById(playID).value = \"Reset\";\r\n                return;\r\n            }\r\n            if (!isPaused) {\r\n                let data = [];\r\n                for (let i = 0, n = animationFrames[1].data.length; i < n; ++i) {\r\n                    data.push(animationFrames[animationIndex].data[i]);\r\n                }\r\n                Plotly.animate(\r\n                    \"graph\",\r\n                    { data: data },\r\n                    {\r\n                        fromcurrent: true,\r\n                        transition: { duration: duration },\r\n                        frame: { duration: duration, redraw: true },\r\n                        mode: \"next\",\r\n                    }\r\n                );\r\n                pauseComp(duration + 5);\r\n                requestAnimationFrame(update);\r\n                updateSlider();\r\n                //Add stopping functionality here!!!\r\n                if (\r\n                    animationIndex === stops[0] ||\r\n                    animationIndex === stops[1] ||\r\n                    animationIndex === stops[2] ||\r\n                    animationIndex === stops[3] ||\r\n                    animationIndex === stops[4] ||\r\n                    animationIndex === stops[5] ||\r\n                    animationIndex === stops[6] ||\r\n                    animationIndex === stops[7]\r\n                ) {\r\n                    isPaused = !isPaused;\r\n                    // document.getElementById(playID).value = \"Continue\";\r\n                    animationIndex--;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n        * pauses the computation.\r\n        * @param {float} - time duration to pause the computation. (ms)\r\n        */\r\n        function pauseComp(ms) {\r\n            ms += new Date().getTime();\r\n            while (new Date() < ms);\r\n            return;\r\n        }\r\n\r\n        /** updates linked frame slider value and position. */\r\n        function updateSlider() {\r\n            $(sliderID).val(animationIndex);\r\n            v.frameNo = animationIndex;\r\n            $(sliderID + \"Display\").text(animationIndex);\r\n        }\r\n\r\n        /** Starts the animation. */\r\n        function startAnimation() {\r\n            console.log(\"startAnimation called\");\r\n            if (animationIndex < animationLimit) {\r\n                isPaused = !isPaused;\r\n                // document.getElementById(playID).value = isPaused ? \"Play\" : \"Pause\";\r\n                requestAnimationFrame(update);\r\n            } else {\r\n                reset();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let layout = {\r\n            width: 450, \"height\": 500,\r\n            margin: {l:30, r:30, t:30, b:30},\r\n            hovermode: \"closest\",\r\n            showlegend: false,\r\n            xaxis: {range: [-5, 5], zeroline: true, title: \"x\"},\r\n            yaxis: {range: [-5, 5], zeroline: true, title: \"y\"},\r\n            aspectratio: {x:1, y:1}\r\n        };\r\n\r\n\r\n        // let isBlackText = false;\r\n        // let blackTextType = \"lines\";\r\n\r\n\r\n        //represents 1/4 of the entire arbitrary shape\r\n        //sep_x and sep_y are the distance of this 1/4 shape away from x axis and y axis\r\n        function initArbitraryShape(phi1, phi2, sep_x, sep_y, x, y, innerArrow = true) {\r\n            let Curve = []\r\n            let xTemp = [], yTemp = [];\r\n            //when combine the four parts, let innerArrow = false so the inner arrows can be hidden\r\n            let innerColor = magenta;\r\n            if(!innerArrow){\r\n                innerColor = orange;\r\n            }\r\n            //add the side with straight lines\r\n            let side ={\r\n                type: \"scatter\",\r\n                mode: \"lines\",\r\n                x: [sep_x, sep_x, x+sep_x],\r\n                y: [y+sep_y, sep_y, sep_y],\r\n                line: {color: innerColor, width: 1},\r\n                fill: 'toself',\r\n                fillcolor: orange,\r\n                opacity: 0.9\r\n            };\r\n            Curve.push(side)\r\n\r\n            //add the curly side\r\n            let Phi = numeric.linspace(phi1,phi2,20)\r\n            for (let i=0; i<20; ++i){\r\n                let radius = 1 - 0.7*(Math.cos(Phi[i]-Math.PI*0.25)*Math.sin(Phi[i]-Math.PI*0.25));\r\n                xTemp.push(2*radius*Math.cos(Phi[i])+sep_x);\r\n                yTemp.push(2*radius*Math.sin(Phi[i])+sep_y);\r\n            }\r\n\r\n            let curve ={\r\n                    type: \"scatter\",\r\n                    mode: \"lines\",\r\n                    x: xTemp,\r\n                    y: yTemp,\r\n                    line: {color: black, width: 4},\r\n                    fill: 'toself',\r\n                    fillcolor: orange,\r\n                    opacity: 0.9\r\n                }\r\n            Curve.push(curve)\r\n\r\n            //add arrows on each side use if blocks to identify which 1/4 of the arbitrary shape is being drawn\r\n            let half_x = (2*sep_x + x)*0.5\r\n            let half_y = (2*sep_y + y)*0.5\r\n            let grid1, grid2, y1, arr;\r\n            if (sep_x*sep_y>0){\r\n                grid1 = new Line2d([[sep_x,sep_y],[half_x, sep_y]])\r\n                if (sep_x>0){\r\n                    y1 = y + 1 + sep_y;\r\n                }else if (sep_x<0){\r\n                    y1 = y - 1 + sep_y;\r\n                }\r\n                grid2 = new Line2d([[sep_x, y1],[sep_x, half_y]])\r\n                arr = new Line2d([[sep_x+x, sep_y],[xTemp[10],yTemp[10]]])\r\n            }else if(sep_x*sep_y<0){\r\n                grid1 = new Line2d([[x+sep_x,sep_y],[half_x, sep_y]])\r\n                if (sep_y>0){\r\n                    y1 = y - 1 + sep_y;\r\n                }else if (sep_y<0){\r\n                    y1 = y + 1 + sep_y;\r\n                }\r\n                grid2 = new Line2d([[sep_x, -y1],[sep_x, half_y]])\r\n                arr = new Line2d([[sep_x, sep_y+y],[xTemp[10],yTemp[10]]])\r\n            }\r\n            Curve.push(arr.arrowHead(black,3))\r\n            if (innerArrow){\r\n                Curve.push(grid1.arrowHead(magenta,2));\r\n                Curve.push(grid2.arrowHead(magenta,2));\r\n            } else {\r\n                Curve.push(grid1.arrowHead(magenta,0));\r\n                Curve.push(grid2.arrowHead(magenta,0));\r\n            }\r\n\r\n\r\n            return Curve\r\n        }\r\n\r\n        // function blank(data1, number){\r\n        //     for (let i=0; i<number; ++i){\r\n        //         data1.push({\r\n        //             type: \"scatter\",\r\n        //             mode: \"lines\",\r\n        //             lines: {width:0}\r\n        //         })\r\n        //     }\r\n        //     return 0;\r\n        // }\r\n\r\n\r\n        //plot\r\n        function updatePlot(){\r\n            console.log(\"updatePlot called\");\r\n            let frames = [];\r\n            //first frame -- four pieces being combined as an entire arbitrary shape\r\n            let Curve1 = new initArbitraryShape(0, 0.5*Math.PI, 0.02, 0.02, 2.7, 1.3, false),\r\n                Curve2 = new initArbitraryShape(0.5*Math.PI, Math.PI, -0.02, 0.02, -2.7, 1.3, false),\r\n                Curve3 = new initArbitraryShape(Math.PI, 1.5*Math.PI, -0.02, -0.02, -2.7, -1.3, false),\r\n                Curve4 = new initArbitraryShape(1.5*Math.PI, 2*Math.PI, 0.02, -0.02, 2.7, -1.3, false),\r\n                curve = Curve4.concat(Curve2);\r\n                curve = curve.concat(Curve1);\r\n                curve = curve.concat(Curve3);\r\n\r\n            frames.push({data: curve});\r\n\r\n            //second stage -- separate the four part gradually\r\n            for (let i=2; i<11; ++i){\r\n                Curve1 = new initArbitraryShape(0, 0.5*Math.PI, 0.02*i, 0.02*i, 2.7, 1.3,true)\r\n                Curve2 = new initArbitraryShape(0.5*Math.PI, Math.PI, -0.02*i, 0.02*i, -2.7, 1.3,true)\r\n                Curve3 = new initArbitraryShape(Math.PI, 1.5*Math.PI, -0.02*i, -0.02*i, -2.7, -1.3,true)\r\n                Curve4 = new initArbitraryShape(1.5*Math.PI, 2*Math.PI, 0.02*i, -0.02*i, 2.7, -1.3,true)\r\n                curve = Curve4.concat(Curve2);\r\n                curve = curve.concat(Curve1);\r\n                curve = curve.concat(Curve3);\r\n\r\n                frames.push({data: curve});\r\n            }\r\n            //load animation\r\n            initAnimation(\"animate\", frames, [], layout, 10)\r\n        }\r\n\r\n\r\n\r\n        //load main\r\n        function main() {\r\n            console.log(\"main called\")\r\n            updatePlot();\r\n            // initGuidance([\"graph\",\"ani\",\"green\"]);\r\n            if (v.frameNo == -1) {\r\n                startAnimation();\r\n            }\r\n        }\r\n\r\n        function redraw() {\r\n            requestAnimationFrame(redraw);\r\n\r\n            if (v.redrawPlot) {\r\n                console.log(\"need redraw\");\r\n                // startAnimation();\r\n                historyPlot(v.frameNo);\r\n                v.redrawPlot = false;\r\n            }\r\n        }\r\n\r\n        main();\r\n        redraw();\r\n    },\r\n}\r\n</script>\r\n<style>\r\n.center {\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* margin-top: 50px; */\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralisedGreenTheorem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralisedGreenTheorem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GeneralisedGreenTheorem.vue?vue&type=template&id=2e81f37b&\"\nimport script from \"./GeneralisedGreenTheorem.vue?vue&type=script&lang=js&\"\nexport * from \"./GeneralisedGreenTheorem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GeneralisedGreenTheorem.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport ImpVis from '@impvis/components'\nimport '@impvis/components/dist/impvis-components.css'\nimport generalisedgreentheorem from './GeneralisedGreenTheorem.vue'\nimport ImpVisKatex from \"@impvis/components-katex\"\n\nVue.config.productionTip = false\nVue.use(ImpVis);\nVue.use(ImpVisKatex)\n\n\n\n\nnew Vue({\n    render: h => h(generalisedgreentheorem),\n  }).$mount('#app')\n  ","module.exports = {\n    publicPath:'./',\n    pages:{\n        index:{\n            entry:'src/main.js',\n            title:'Index'\n        },\n            introduction:{\n                entry:'src/Introduction/main.js',\n                title:'Introduction',\n                \n            },\n            divergence:{\n                entry:'src/Divergence/main.js',\n                title:'Divergence',\n                \n            },\n            curl:{\n                entry:'src/Curl/main.js',\n                title:'Curl',\n                \n            },\n            circulation:{\n                entry:'src/Circulation/main.js',\n                title:'Circulation',\n                \n            },\n            greentheorem:{\n                entry:'src/GreenTheorem/main.js',\n                title:'GreenTheorem',\n                \n            },\n            generalisedgreentheorem:{\n                entry:'src/GeneralisedGreenTheorem/main.js',\n                title:'GeneralisedGreenTheorem',\n                \n            },\n            stoketheorem:{\n                entry:'src/StokeTheorem/main.js',\n                title:'StokeTheorem',\n                \n            },\n    }\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GeneralisedGreenTheorem.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}